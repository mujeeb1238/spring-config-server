# Production-specific configurations for auth-service
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/auth_service_prod
    username: prod_user
    password: prod_password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
  cloud:
    consul:
      host: ${CONSUL_HOST:localhost}
      port: ${CONSUL_PORT:8500}
      discovery:
        instanceId: ${spring.application.name}:${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 15s
        register: true
        prefer-ip-address: true

server:
  port: ${SERVER_PORT:9000}
  tomcat:
    max-threads: 400
    min-spare-threads: 40
    max-connections: 10000
    accept-count: 100
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 2048

jwt:
  secret: ${JWT_SECRET:5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437}

logging:
  level:
    com.example.authservice: WARN
    org.hibernate: ERROR
    root: WARN
  file:
    name: /var/log/auth-service/application-prod.log
    max-size: 500MB
    max-history: 60
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

auth-service:
  feature:
    enabled: true
    debug-mode: false
  cache:
    ttl: 7200
  api:
    timeout: 3000

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never
  metrics:
    tags:
      application: auth-service
      environment: production

server:
  tomcat:
    max-threads: 200
    min-spare-threads: 20
    max-connections: 10000
    accept-count: 100
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 2048
